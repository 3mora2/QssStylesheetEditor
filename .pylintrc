[MASTER]
init-hook='base_dir="QssStylesheetEditor"; import sys,os,re; _re=re.search(r".+[\\\/]" + base_dir, os.getcwd()); project_dir = _re.group() if _re else os.path.join(os.getcwd(), base_dir); sys.path.append(project_dir); sys.path.append(project_dir+"/src")'

extension-pkg-whitelist=PyQt5, sip
ignore=CVS, .git, dist, build, bak, toml, splash.py
ignore-patterns=.*(_[vV][0-9.\-_]+[.]py$$|[.]old[.]py$$|_bak[.]py$|_rc[.]py$)

jobs=0
load-plugins=pylint.extensions.bad_builtin,
             #deprecated_builtins,
             pylint.extensions.check_elif,
             #pylint.extensions.docparams,
             pylint.extensions.docstyle,
             pylint.extensions.emptystring,
             pylint.extensions.comparetozero,
             pylint.extensions.mccabe,
             # design checker, for finding complexity issues 
             pylint.extensions.overlapping_exceptions,
             pylint.extensions.redefined_variable_type
             # Multiple Types checker

persistent=yes

#rcfile=

suggestion-mode=yes

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no


[MESSAGES CONTROL]

disable= import-outside-toplevel, # some module need import inside function
         broad-except, # Catching too general exception, such as: Exception
         no-self-use, # method didn't used 'self' param, change to static function is ugly too
        ; invalid-name,
         missing-function-docstring, # add later
        ; too-many-locals,
        ; unused-argument, # override must have unused-argument
        ; unnecessary-lambda, # dialog.show must use lambda
        too-many-statements, # preview has many statements
        ; too-many-public-methods,
        ; eval-used,
        ; bad-continuation, # not equal to pep8
        ; unsubscriptable-object, #error when you use pyqt# print-statement,
        ; redefined-variable-type, # base class type as function param will cause err

enable=c-extension-no-member


[REPORTS]

evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

output-format=text
reports=no
score=yes


[REFACTORING]

max-nested-blocks=5
never-returning-functions=sys.exit


[BASIC]
module-naming-style=snake_case

class-naming-style=PascalCase
class-attribute-naming-style=camelCase
attr-naming-style=camelCase
method-naming-style=camelCase
argument-naming-style=camelCase

function-naming-style=snake_case

# all var in module(such as all vars in __name__=="__main__") are treated as const
const-naming-style= any #UPPER_CASE
variable-naming-style=any
inlinevar-naming-style=any

property-classes=abc.abstractproperty

good-names=i,
           j,
           k,
           l,
           m,
           n,
           x,
           y,
           z,
           ex,
           Run,
           _


include-naming-hint=no
docstring-min-length=-1


[FORMAT]
ignore-long-lines=^\s*(# )?<?https?://\S+>?$
indent-after-paren=4
indent-string='    '
max-line-length=120
max-module-lines=1000
no-space-check=trailing-comma,
               dict-separator
single-line-if-stmt=yes


[MISCELLANEOUS]

notes=FIXME,
      XXX,
      TODO


[SIMILARITIES]

ignore-comments=yes
ignore-docstrings=yes
ignore-imports=no
min-similarity-lines=4


[VARIABLES]

allow-global-unused-variables=yes

dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# whether check for unused import in __init__ files.
init-import = no


[DESIGN]

max-args=8


[IMPORTS]

allow-any-import-level=True
# Force import order to recognize a module as part of a third party library.
known-third-party=enchant, PyQt5, sip



