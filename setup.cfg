[pycodestyle]
exclude = .git, .svn, CVS, .bzr, .hg, *old.py, *_bak.py, toml
# print total number of errors and warnings
count = True
# W503 line break before binary operator
ignore = W503
max-line-length = 120
statistics = True

# see config for pep8 in <https://pycodestyle.readthedocs.io/en/latest/intro.html#configuration>
# generall usage: pycodestyle src --statistics -qq


[yapf]
based_on_style = pep8
indent_width = 4
column_limit = 120

# see cofig for yapf in <https://github.com/google/yapf#formatting-style>
# alse can get config file by `yapf --style-help > .style.yapf`
# generall usage: yapf -ri src

# pylint 'setup.cfg' config file will not working on pylint version <2.5
[pylint.MASTER]
init-hook='base_dir="QssStylesheetEditor"; import sys,os,re; _re=re.search(r".+[\\\/]" + base_dir, os.getcwd()); project_dir = _re.group() if _re else os.path.join(os.getcwd(), base_dir); sys.path.append(project_dir); sys.path.append(project_dir+"/src")'

#'import sys; sys.path.append("."); sys.path.append("src")'
# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code.
extension-pkg-whitelist = PyQt5, sip
# Add files or directories to the blacklist. They should be base names, not paths.
ignore = CVS, .git, dist, build, bak, toml, splash.py
    #__init__.py, will cause err
# regex matches against base names, not paths.
ignore-patterns = .*(_[vV][0-9.\-_]+[.]py$$|[.]old[.]py$$|_bak[.]py$|_rc[.]py$)
[pylint.MESSAGES CONTROL]
disable = broad-except
max-line-length=120


# config can be get by `pylint --generate-rcfile`
# see config for pylint in <http://pylint.pycqa.org/en/latest/user_guide/run.html> and
#                          <http://pylint.pycqa.org/en/latest/user_guide/options.html>
# 




# pytest
# [tool:pytest] not recommended unless for very simple use cases.
